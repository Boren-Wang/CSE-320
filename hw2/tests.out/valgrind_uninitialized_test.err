==10316== Memcheck, a memory error detector
==10316== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10316== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==10316== Command: bin/vtree -q tests/rsrc/test_tree
==10316== 
==10316== Invalid write of size 8
==10316==    at 0x4C367E3: memmove (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10316==    by 0x109436: down (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x109B8B: get_data (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x10A11C: vtree_main (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x10A1DE: main (in /home/student/borwang/hw2/bin/vtree)
==10316==  Address 0x52360f8 is 0 bytes after a block of size 8 alloc'd
==10316==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10316==    by 0x109411: down (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x109B8B: get_data (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x10A11C: vtree_main (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x10A1DE: main (in /home/student/borwang/hw2/bin/vtree)
==10316== 

valgrind: m_mallocfree.c:307 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 80, hi = 288230574492221464.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==10316==    at 0x580441BA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x580442D4: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x58044459: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x58052FC0: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x5803CECA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x5803B5D3: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x5803FC9D: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x5803A8CB: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==10316==    by 0x1002D54165: ???
==10316==    by 0x1002CA9F2F: ???
==10316==    by 0x1C0F: ???
==10316==    by 0x100200836F: ???
==10316==    by 0x1002CA9F17: ???
==10316==    by 0x1002CA9F2F: ???
==10316==    by 0x11082: ???
==10316==    by 0x1002D540BF: ???
==10316==    by 0x15608: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 10316)
==10316==    at 0x109445: down (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x109B8B: get_data (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x10A11C: vtree_main (in /home/student/borwang/hw2/bin/vtree)
==10316==    by 0x10A1DE: main (in /home/student/borwang/hw2/bin/vtree)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

